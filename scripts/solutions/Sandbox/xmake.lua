set_project("Sandbox")

BuildProject({
	projectName = "Hephaestus-ScriptCore",
	projectType = "shared",
	macros = {},
	languages = {"csharp"},
	depends = {},
	files = {"$(projectdir)/Hephaestus-ScriptCore/src/**.cs"},
	headerfiles = {},
	pchHeader = nil,
	includePaths = {},
	rundir = "$(projectdir)/Hephaestus-ScriptCore",
	packages = {},
	debugLink = {},
	releaseLink = {},
	link = {},
	afterBuildFunc = nil,
	enableException = true,
	staticruntime = false,
})

BuildProject({
	projectName = "ExampleApp",
	projectType = "shared",
	macros = {},
	languages = {"csharp"},
	depends = {"Hephaestus-ScriptCore"},
	files = {"$(projectdir)/ExampleApp/src/**.cs"},
	headerfiles = {},
	pchHeader = nil,
	includePaths = {},
	rundir = "$(projectdir)/ExampleApp",
	packages = {},
	debugLink = {},
	releaseLink = {},
	link = {},
	afterBuildFunc = nil,
	enableException = true,
	staticruntime = false,
	targetdir = "$(projectdir)/Poseidon/assets/scripts",
})

--[[BuildProject({
	projectName = "Sandbox",
	projectType = "binary",
	macros = {},
	languages = {"clatest", "cxx20"},
	depends = {"Hephaestus"},
	files = {"Sandbox/src/**.cpp"},
	headerfiles = {"Sandbox/src/**.hpp", "Sandbox/src/**.h"},
	pchHeader = nil,
	includePaths = {"external", "Hephaestus/src", "Sandbox/src",
		IncludeDir.glm,
	},
	rundir = "$(projectdir)/Sandbox",
	packages = {"assimp"},
	debugLink = {},
	releaseLink = {},
	link = {"kernel32", "User32", "Gdi32", "Shell32"},
	afterBuildFunc = nil,
	enableException = true,
	staticruntime = true,
	startproject = false,
})--]]